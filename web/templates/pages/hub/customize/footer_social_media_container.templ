package customize

import (
	"RouteHub.Service.Dashboard/ent/schema/types"
	"fmt"
)

templ footerSocialMediaContainer(sc *types.SocialMediaContainer, hubSlug string) {
	<div class="grid gap-4 lg:gap-6">
		<div class="grid grid-cols-1 sm:grid-cols-3 gap-4 lg:gap-6">
			<div>
				<label
					for="social_media_color_class"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Color Class</label>
				<input
					type="text"
					name="social_media_color_class"
					placeholder="Brand Name will be visible at Navbar."
					value={ sc.SocialMediaColorClass }
					aria-describedby="social_media_color_class"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
			<div>
				<label
					for="social_media_pedding_class"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Pedding Class</label>
				<input
					type="text"
					name="social_media_pedding_class"
					placeholder="Brand Name will be visible at Navbar."
					value={ sc.SocialMediaPeddingClass }
					aria-describedby="social_media_pedding_class"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
			<div>
				<label
					for="social_media_size_class"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Pedding Class</label>
				<input
					type="text"
					name="social_media_size_class"
					placeholder="Brand Name will be visible at Navbar."
					value={ sc.SocialMediaSizeClass }
					aria-describedby="social_media_size_class"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
		</div>
		<div class="grid grid-cols-1 sm:grid-cols-1 gap-4 lg:gap-6">
			@footerSocialMediaLinkList(hubSlug)
		</div>
	</div>
}

templ footerSocialMediaLinkList(hubSlug string) {
	<div
		class="container mx-auto mt-10"
		x-data={ fmt.Sprintf("socialMediaManager('%s')", hubSlug) }
		x-init="init"
	>
		<ul class="mt-3 flex flex-col" id="social-media-list">
			<template x-for="(social, index) in socials" :key="index">
				<li class="inline-flex items-center gap-x-2 py-3 px-4 text-sm border text-gray-800 -mt-px first:rounded-t-lg first:mt-0 last:rounded-b-lg dark:border-neutral-700 dark:text-neutral-200">
					<div class="flex items-center justify-between w-full">
						<div class="flex items-center gap-4">
							<input type="text" x-model="social.icon" placeholder="Icon" class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"/>
							<input type="Link" x-model="social.link" placeholder="Link" class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"/>
							<select x-model="social.target" class="py-3 px-4 pe-9 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600">
								<option value="_self">_self</option>
								<option value="_blank">_blank</option>
							</select>
						</div>
						<div class="flex items-center gap-2">
							<template x-if="index < socials.length - 1">
								<button class="text-blue-500" @click="moveDown(index)">
									<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="m480-320 160-160-56-56-64 64v-168h-80v168l-64-64-56 56 160 160Zm0 240q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
								</button>
							</template>
							<template x-if="index > 0">
								<button class="text-blue-500" @click="moveUp(index)">
									<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="M440-320h80v-168l64 64 56-56-160-160-160 160 56 56 64-64v168Zm40 240q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
								</button>
							</template>
							<button class="text-red-500" @click="removeSocial(index)">
								<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="m336-280 144-144 144 144 56-56-144-144 144-144-56-56-144 144-144-144-56 56 144 144-144 144 56 56ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
							</button>
						</div>
					</div>
				</li>
			</template>
			<li class="inline-flex items-center gap-x-2 py-3 px-4 text-sm border text-gray-800 -mt-px first:rounded-t-lg first:mt-0 last:rounded-b-lg dark:border-neutral-700 dark:text-neutral-200">
				<div class="flex items-center justify-between w-full">
					<div class="flex items-center gap-4"></div>
					<div class="flex items-center gap-2">
						<button @click="addSocial" class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-gray-800 text-gray-800 hover:border-gray-500 hover:text-gray-500 focus:outline-none focus:border-gray-500 focus:text-gray-500 disabled:opacity-50 disabled:pointer-events-none dark:border-white dark:text-white dark:hover:text-neutral-300 dark:hover:border-neutral-300">
							Add new
						</button>
						<button @click="saveChanges" class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-teal-500 text-teal-500 hover:border-teal-400 hover:text-teal-400 focus:outline-none focus:border-teal-400 focus:text-teal-400 disabled:opacity-50 disabled:pointer-events-none">
							Save Changes
						</button>
					</div>
				</div>
			</li>
		</ul>
	</div>
	<!-- End List Group -->
	<script>
	    function socialMediaManager(hubSlug) {
            return {
                socials: [],
                init() {
                    fetch('/hub/'+hubSlug+'/customize/footer/social-media-links')
                        .then(response => response.json())
                        .then(data => this.socials = data);
                },
                addSocial() {
                    this.socials.push({ Icon: '', Link: '', target: '_self' });
                },
                removeSocial(index) {
                    this.socials.splice(index, 1);
                },
                moveUp(index) {
                    if (index > 0) {
                        [this.socials[index - 1], this.socials[index]] = [this.socials[index], this.socials[index - 1]];
                    }
                },
                moveDown(index) {
                    if (index < this.socials.length - 1) {
                        [this.socials[index + 1], this.socials[index]] = [this.socials[index], this.socials[index + 1]];
                    }
                },
                saveChanges() {
                  const socialMediaLinks = this.socials.map(social => ({
                       icon: social.icon,
                       link: social.link,
                       target: social.target,
                   }));

                    fetch('/hub/'+hubSlug+'/customize/footer/social-media-links', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body:  JSON.stringify({ socialMediaLinks }) ,
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Failed to save changes');
                        }

                        document.body.dispatchEvent(new CustomEvent('toast', {
                            detail: {
                                message: response.ok ? 'Changes saved successfully' : 'Failed to save changes',
                                level : response.ok ? 'success' : 'error'
                            }
                        }));

                        document.body.dispatchEvent(new CustomEvent('close-modal'));
                        document.body.dispatchEvent(new CustomEvent('footerItemUpdated'));
                        document.body.dispatchEvent(new CustomEvent('footerUpdated'));

                    })
                    .catch(error => {
                        console.error('Error saving changes:', error);
                    });
                }
            }
        }
	</script>
}
