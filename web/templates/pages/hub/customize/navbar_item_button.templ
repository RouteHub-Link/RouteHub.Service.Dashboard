package customize

import (
	"RouteHub.Service.Dashboard/web/templates/pages/partial"
	"RouteHub.Service.Dashboard/web/utils"
	"fmt"
)

type NavbarItemButtonFormPayload struct {
	HubSlug    string
	ID         string `json:"id" form:"id"`
	Name       string `json:"name" form:"name" validate:"required"`
	URL        string `json:"url" form:"url"`
	Icon       string `json:"icon" form:"icon"`
	Target     string `json:"target" form:"target" validate:"required"`
	ColorClass string `json:"color_class" form:"color_class"`
}

templ NavbarItemButtonForm(payload NavbarItemButtonFormPayload, messageTemplate templ.Component) {
	if messageTemplate != nil {
		@messageTemplate
	} else {
		<div id="navbar_item_button_form">
			if payload.ID != "" {
				<form hx-post={ fmt.Sprintf("/hub/%s/customize/navbar/button/%s/edit", payload.HubSlug, payload.ID) }>
					@navbarItemButtonForm(payload)
				</form>
			} else {
				<form hx-post={ fmt.Sprintf("/hub/%s/customize/navbar/button/new", payload.HubSlug) }>
					@navbarItemButtonForm(payload)
				</form>
			}
		</div>
	}
}

templ navbarItemButtonForm(payload NavbarItemButtonFormPayload) {
	<input name="id" value={ payload.ID } type="hidden"/>
	<div class="grid gap-4 lg:gap-6">
		<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
			<div>
				<label
					for="name"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Name</label>
				<input
					type="text"
					name="name"
					placeholder="Navbar Item Text."
					value={ payload.Name }
					aria-describedby="text"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
			<div>
				<label
					for="url"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Item URL</label>
				<input
					type="text"
					name="url"
					placeholder="Brand URL will be redirected when clicked on Brand Name."
					value={ payload.URL }
					aria-describedby="brand_url"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
			<div class="col-span-2">
				<label
					for="color_class"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Color Class</label>
				<input
					type="text"
					name="color_class"
					placeholder="Color class for the button."
					value={ payload.ColorClass }
					aria-describedby="color_class"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
		</div>
		<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
			<div>
				<label
					for="icon"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Icon</label>
				<input
					type="text"
					name="icon"
					placeholder="Item icon."
					value={ payload.Icon }
					aria-describedby="text"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
			<div>
				<label
					for="target"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Target</label>
				@partial.FormSelect(utils.ElementTargetOptions(payload.Target), "target")
			</div>
		</div>
		<button
			type="submit"
			class="relative py-3 px-4 inline-flex justify-center items-center gap-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"
		>
			Save Changes
			<div class="htmx-indicator absolute w-full h-full pt-3 dark:bg-gray-800/[.4]" id="spinner">
				<span
					class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full"
					role="status"
					aria-label="loading"
					id="spinner"
				></span>
			</div>
		</button>
	</div>
}
