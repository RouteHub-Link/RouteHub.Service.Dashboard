package customize

import (
	"RouteHub.Service.Dashboard/ent"
	layouts "RouteHub.Service.Dashboard/web/templates/layouts"
	"RouteHub.Service.Dashboard/web/templates/pages/partial"
	"RouteHub.Service.Dashboard/web/utils"
	"fmt"
	"github.com/zitadel/oidc/v3/pkg/oidc"
)

type MetaPayload struct {
	Title       string `json:"meta_description_title" form:"meta_description_title"`
	FavIcon     string `json:"meta_description_favicon" form:"meta_description_favicon"`
	Description string `json:"meta_description_description" form:"meta_description_description"`

	// og:description, twitter:description
	OGDescription string `json:"meta_description_og_description" form:"meta_description_og_description"`

	// og:title, twitter:title
	OGTitle string `json:"meta_description_og_title" form:"meta_description_og_title"`

	Locale string `json:"meta_description_locale" form:"meta_description_locale"`

	TracingScript string `json:"meta_description_tracing_script" form:"meta_description_tracing_script"`
}

templ MetaPage(userInfo *oidc.UserInfo, hub *ent.Hub, metaPayload MetaPayload, hubSlug string, feedback templ.Component) {
	@layouts.Main(layouts.PageDescription{
		MainContent: metaPage(metaPayload, hubSlug, feedback),
		UserInfo:    userInfo,
		Hub:         hub,
	})
}

templ metaPage(payload MetaPayload, hubSlug string, feedback templ.Component) {
	<div class="max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto">
		<div class="flex flex-col">
			<div class="-m-1.5 overflow-x-auto">
				<div class="p-1.5 min-w-full inline-block align-middle">
					<div
						class="bg-white border border-gray-200 rounded-xl shadow-sm overflow-hidden dark:bg-neutral-800 dark:border-neutral-700"
					>
						<!-- Header -->
						<div
							class="px-6 py-4 grid gap-3 md:flex md:justify-between md:items-center border-b border-gray-200 dark:border-neutral-700"
						>
							<div>
								<h2 class="text-xl font-semibold text-gray-800 dark:text-neutral-200">
									HUB Customize
								</h2>
								<p class="text-sm text-gray-600 dark:text-neutral-400">
									Edit the meta information of your hub.
								</p>
							</div>
						</div>
						<!-- End Header -->
						<div class="min-w-full divide-y divide-gray-200 dark:divide-neutral-700 px-8 py-4">
							@metaForm(payload, hubSlug, feedback)
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ metaForm(payload MetaPayload, hubSlug string, feedback templ.Component) {
	<form hx-post={ fmt.Sprintf("/hub/%s/customize/partial/meta", hubSlug) } enctype="multipart/form-data" hx-indicator="#spinner" hx-swap="outerHTML">
		if feedback != nil {
			@feedback
		}
		@metaPartial(payload, hubSlug)
		<div class="mt-5 flex justify-end gap-x-2">
			<button type="submit" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none">
				Save changes
				<div class="htmx-indicator" id="spinner">
					<div class="animate-spin inline-block size-6 border-[3px] border-current border-t-transparent text-blue-600 rounded-full dark:text-blue-500" role="status" aria-label="loading">
						<span class="sr-only">Loading...</span>
					</div>
				</div>
			</button>
		</div>
	</form>
}

templ metaPartial(metaPayload MetaPayload, hubSlug string) {
	<div class="grid gap-4 lg:gap-6">
		<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
			<div>
				<label
					for="meta_description_title"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Meta Title</label>
				<input
					type="text"
					name="meta_description_title"
					placeholder="This will be visible at tab and SEO Crawlers as Page Title."
					value={ metaPayload.Title }
					aria-describedby="meta_description_title"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
			<div>
				<label
					for="meta_description_og_title"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>OG Title</label>
				<input
					type="text"
					name="meta_description_og_title"
					placeholder="This will be crawled as OpenGraph Title when placed link the some other platform."
					value={ metaPayload.OGTitle }
					aria-describedby="meta_description_og_title"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
		</div>
		<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
			<div>
				<label
					for="meta_description_description"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Meta Description</label>
				<textarea
					name="meta_description_description"
					aria-describedby="meta_description_description"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
					rows="3"
					placeholder="This will be crawled by bots as Page Description Meta Data."
				>{ metaPayload.Description }</textarea>
			</div>
			<div>
				<label
					for="meta_description_og_description"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>OG Description</label>
				<textarea
					name="meta_description_og_description"
					aria-describedby="meta_description_og_description"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
					rows="3"
					placeholder="This will be crawled by bots as OpenGraph Description usefull for link placement."
				>{ metaPayload.OGDescription }</textarea>
			</div>
		</div>
		<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
			<div>
				@partial.SimpleFileUploader("meta_description_favicon", metaPayload.FavIcon, "Fav Icon", "Upload a Favicon", "Please upload a favicon under 2mb.")
			</div>
			<div>
				<label
					for="meta_description_locale"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Locale</label>
				@partial.FormSelectWithSearch(utils.LocaleOptions(metaPayload.Locale), "meta_description_locale", "Select an Locale")
			</div>
		</div>
		<div class="grid grid-cols-1 sm:grid-cols-1 gap-4 lg:gap-6">
			<div>
				<label
					for="meta_description_locale"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Tracing Script (Be carefull this will be rendered as RAW)</label>
				<textarea
					name="meta_description_tracing_script"
					aria-describedby="meta_description_tracing_script"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
					rows="8"
					placeholder="This will be Added to the end of the Head Tag. As raw HTML. You can use this for tracing scripts. Tracing scripts are used for tracking user interactions. For example, Google Analytics, Umami, Plausible, etc. Example Plausible: <script async defer data-domain='example.com' src='https://plausible.io/js/plausible.js'></script> Also you could add the raw script of the tracing script. <script></script>"
				>{ metaPayload.TracingScript }</textarea>
			</div>
		</div>
	</div>
}
