package customize

import (
	"RouteHub.Service.Dashboard/ent"
	"RouteHub.Service.Dashboard/ent/schema/types"
	layouts "RouteHub.Service.Dashboard/web/templates/layouts"
	"RouteHub.Service.Dashboard/web/templates/pages/partial"
	"fmt"
	"github.com/zitadel/oidc/v3/pkg/oidc"
)

templ NavbarPage(userInfo *oidc.UserInfo, hub *ent.Hub) {
	@layouts.Main(layouts.PageDescription{
		MainContent: navbarPage(hub.Slug),
		UserInfo:    userInfo,
		Hub:         hub,
	})
}

templ navbarPage(hubSlug string) {
	<div class="max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto">
		<div class="flex flex-col">
			<div class="-m-1.5 overflow-x-auto">
				<div class="p-1.5 min-w-full inline-block align-middle">
					<div
						class="bg-white border border-gray-200 rounded-xl shadow-sm overflow-hidden dark:bg-neutral-800 dark:border-neutral-700"
					>
						<!-- Header -->
						<div
							class="px-6 py-4 grid gap-3 md:flex md:justify-between md:items-center border-b border-gray-200 dark:border-neutral-700"
						>
							<div>
								<h2 class="text-xl font-semibold text-gray-800 dark:text-neutral-200">
									HUB Customize
								</h2>
								<p class="text-sm text-gray-600 dark:text-neutral-400">
									Edit the meta information of your hub.
								</p>
							</div>
						</div>
						<!-- End Header -->
						<div
							class="min-w-full divide-y divide-gray-200 dark:divide-neutral-700 px-8 py-4"
							hx-get={ fmt.Sprintf("/hub/%s/customize/partial/navbar", hubSlug) }
							hx-trigger="load, navbarUpdated from:body"
							hx-swap="innerHTML"
						></div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ navbarForm(payload NavbarCustomizePayload, nd types.NavbarDescription, hubSlug string, feedback templ.Component) {
	<form hx-post={ fmt.Sprintf("/hub/%s/customize/partial/navbar", hubSlug) } hx-indicator="#spinner" hx-swap="outerHTML">
		if feedback != nil {
			@feedback
		}
		@navbarPartial(payload, nd, hubSlug)
		<div class="mt-5 flex justify-end gap-x-2">
			<button type="submit" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none">
				Save changes
				<div class="htmx-indicator" id="spinner">
					<div class="animate-spin inline-block size-6 border-[3px] border-current border-t-transparent text-blue-600 rounded-full dark:text-blue-500" role="status" aria-label="loading">
						<span class="sr-only">Loading...</span>
					</div>
				</div>
			</button>
		</div>
	</form>
}

templ navbarPartial(payload NavbarCustomizePayload, nd types.NavbarDescription, hubSlug string) {
	<div
		class="pathpy-3 flex items-center text-sm text-gray-800 before:flex-1 before:border-t before:border-gray-200 before:me-6 after:flex-1 after:border-t after:border-gray-200 after:ms-6 dark:text-white dark:before:border-neutral-600 dark:after:border-neutral-600 py-4"
	>
		Navbar Preview
	</div>
	<div
		hx-get={ fmt.Sprintf("/hub/%s/customize/partial/navbar/shadow", hubSlug) }
		hx-trigger="load, navbarItemUpdated from:body"
		hx-swap="innerHTML"
	></div>
	<div class="grid gap-4 lg:gap-6 pt-4">
		<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
			<div>
				<label
					for="brand_name"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Brand Name</label>
				<input
					type="text"
					name="brand_name"
					placeholder="Brand Name will be visible at Navbar."
					value={ payload.BrandName }
					aria-describedby="brand_name"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
			<div>
				<label
					for="brand_url"
					class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
				>Brand URL</label>
				<input
					type="url"
					name="brand_url"
					placeholder="Brand URL will be redirected when clicked on Brand Name."
					value={ payload.BrandURL }
					aria-describedby="brand_url"
					class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
				/>
			</div>
		</div>
	</div>
	<div
		class="pathpy-3 flex items-center text-sm text-gray-800 before:flex-1 before:border-t before:border-gray-200 before:me-6 after:flex-1 after:border-t after:border-gray-200 after:ms-6 dark:text-white dark:before:border-neutral-600 dark:after:border-neutral-600 py-4"
	>
		Navbar Tree
	</div>
	<div
		hx-get={ fmt.Sprintf("/hub/%s/customize/partial/navbar/tree", hubSlug) }
		hx-trigger="load, navbarItemUpdated from:body"
		hx-swap="innerHTML"
	></div>
}

templ navbarFunctions(tn *partial.TreeNode, isAddable bool, isRemovable bool, isEditable bool, hubSlug string) {
	<div class="pl-2 flex">
		if isAddable {
			<a
				hx-get={ fmt.Sprintf("/hub/%s/customize/navbar/item/%s/new", hubSlug, tn.ID) }
				hx-target="#hs-modal-content"
				hx-swap="innerHTML"
				aria-haspopup="dialog"
				aria-expanded="false"
				aria-controls="hs-modal"
				data-hs-overlay="#hs-modal"
				class=""
			>
				<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
			</a>
		}
		if isEditable {
			<a
				hx-get={ fmt.Sprintf("/hub/%s/customize/navbar/item/%s/edit", hubSlug, tn.ID) }
				hx-target="#hs-modal-content"
				hx-swap="innerHTML"
				aria-haspopup="dialog"
				aria-expanded="false"
				aria-controls="hs-modal"
				data-hs-overlay="#hs-modal"
			>
				<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z"></path></svg>
			</a>
		}
		if isRemovable {
			<a
				hx-get={ fmt.Sprintf("/hub/%s/customize/navbar/item/%s/delete", hubSlug, tn.ID) }
				hx-target="#hs-modal-content"
				hx-swap="innerHTML"
				aria-haspopup="dialog"
				aria-expanded="false"
				aria-controls="hs-modal"
				data-hs-overlay="#hs-modal"
				class=""
			>
				<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="m336-280 144-144 144 144 56-56-144-144 144-144-56-56-144 144-144-144-56 56 144 144-144 144 56 56ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
			</a>
		}
	</div>
}

templ navbarButtonFunctions(tn *partial.TreeNode, hubSlug string) {
	<div class="pl-2 flex">
		<a
			hx-get={ fmt.Sprintf("/hub/%s/customize/navbar/button/%s/edit", hubSlug, tn.ID) }
			hx-target="#hs-modal-content"
			hx-swap="innerHTML"
			aria-haspopup="dialog"
			aria-expanded="false"
			aria-controls="hs-modal"
			data-hs-overlay="#hs-modal"
		>
			<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z"></path></svg>
		</a>
		<a
			hx-get={ fmt.Sprintf("/hub/%s/customize/navbar/button/%s/delete", hubSlug, tn.ID) }
			hx-target="#hs-modal-content"
			hx-swap="innerHTML"
			aria-haspopup="dialog"
			aria-expanded="false"
			aria-controls="hs-modal"
			data-hs-overlay="#hs-modal"
			class=""
		>
			<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="m336-280 144-144 144 144 56-56-144-144 144-144-56-56-144 144-144-144-56 56 144 144-144 144 56 56ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
		</a>
	</div>
}

templ navbarCreateSelector(hubSlug string) {
	<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
		<div>
			<a
				hx-get={ fmt.Sprintf("/hub/%s/customize/navbar/item/nav-root/new", hubSlug) }
				hx-target="#hs-modal-content"
				hx-swap="innerHTML"
				aria-haspopup="dialog"
				aria-expanded="false"
				aria-controls="hs-modal"
				data-hs-overlay="#hs-modal"
				class="bg-black text-white flex cursor-pointer"
			>
				New Navbar Menu Item
				<svg class="pl-2" xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
			</a>
		</div>
		<div>
			<a
				hx-get={ fmt.Sprintf("/hub/%s/customize/navbar/button/new", hubSlug) }
				hx-target="#hs-modal-content"
				hx-swap="innerHTML"
				aria-haspopup="dialog"
				aria-expanded="false"
				aria-controls="hs-modal"
				data-hs-overlay="#hs-modal"
				class="bg-black text-white flex cursor-pointer"
			>
				New Navbar Button
				<svg class="pl-2" xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
			</a>
		</div>
	</div>
}

templ navRootFunctions(hubSlug string) {
	<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
		<div>
			<a
				hx-get={ fmt.Sprintf("/hub/%s/customize/navbar/new/selection", hubSlug) }
				hx-target="#hs-modal-content"
				hx-swap="innerHTML"
				aria-haspopup="dialog"
				aria-expanded="false"
				aria-controls="hs-modal"
				data-hs-overlay="#hs-modal"
				class=""
			>
				<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#B7B7B7"><path d="M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg>
			</a>
		</div>
	</div>
}
