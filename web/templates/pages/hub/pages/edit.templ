package pages

import (
	"RouteHub.Service.Dashboard/ent"
	"RouteHub.Service.Dashboard/ent/schema/enums"
	layouts "RouteHub.Service.Dashboard/web/templates/layouts"
	"RouteHub.Service.Dashboard/web/templates/pages/partial"
	"RouteHub.Service.Dashboard/web/utils"
	"fmt"
	"github.com/zitadel/oidc/v3/pkg/oidc"
)

templ editPage(userInfo *oidc.UserInfo, hub *ent.Hub, page PagePayload) {
	@layouts.Main(layouts.PageDescription{
		MainContent: editPageForm(hub.Slug, page),
		UserInfo:    userInfo,
		Hub:         hub,
	})
}

templ editPageForm(hubSlug string, payload PagePayload) {
	<div class="max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto">
		<div class="flex flex-col">
			<div class="-m-1.5 overflow-x-auto">
				<div class="p-1.5 min-w-full inline-block align-middle">
					<div
						class="bg-white border border-gray-200 rounded-xl shadow-sm overflow-hidden dark:bg-neutral-800 dark:border-neutral-700"
					>
						<!-- Header -->
						<div
							class="px-6 py-4 grid gap-3 md:flex md:justify-between md:items-center border-b border-gray-200 dark:border-neutral-700"
						>
							<div>
								<h2 class="text-xl font-semibold text-gray-800 dark:text-neutral-200">
									Short Link
								</h2>
								<p class="text-sm text-gray-600 dark:text-neutral-400">
									Edit the short link details.
								</p>
							</div>
							<div hx-get={ fmt.Sprintf("/hub/%s/pages/%s/status", hubSlug, payload.PageSlug) } hx-swap="innerHTML" hx-trigger="load"></div>
						</div>
						<!-- End Header -->
						<div class="min-w-full divide-y divide-gray-200 dark:divide-neutral-700 px-8 py-4">
							@editForm(hubSlug, payload, nil)
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ editForm(hubSlug string, payload PagePayload, feedback templ.Component) {
	<div id="edit_page_form_center">
		if feedback != nil {
			@feedback
		}
		<form
			hx-post={ fmt.Sprintf("/hub/%s/pages/%s", hubSlug, payload.PageSlug) }
			hx-indicator="#spinner"
			hx-target="#edit_page_form_center"
			hx-swap="innerHTML"
		>
			<div
				class="pathpy-3 flex items-center text-sm text-gray-800 before:flex-1 before:border-t before:border-gray-200 before:me-6 after:flex-1 after:border-t after:border-gray-200 after:ms-6 dark:text-white dark:before:border-neutral-600 dark:after:border-neutral-600 py-4"
			>
				Page Details
			</div>
			<div class="grid gap-4 lg:gap-6">
				<div class="grid grid-cols-1 sm:grid-cols-1 gap-4 lg:gap-6">
					<div>
						<label for="title" class="block text-sm font-medium mb-2 dark:text-white">
							Title of the page
						</label>
						<div class="flex rounded-lg shadow-sm">
							<input
								type="text"
								name="page_name"
								class="py-3 px-4 block w-full border-gray-200 shadow-sm rounded-s-lg text-sm focus:z-10 focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
								placeholder="Awesome Page"
								value={ payload.Name }
								required
							/>
						</div>
						<p class="hidden text-xs text-red-600 mt-2" id="target_address-error">Please provide a title.</p>
					</div>
				</div>
				<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
					<div>
						<label for="title" class="block text-sm font-medium mb-2 dark:text-white">
							Description of the page
						</label>
						<div class="flex rounded-lg shadow-sm">
							<input
								type="text"
								name="page_description"
								class="py-3 px-4 block w-full border-gray-200 shadow-sm rounded-s-lg text-sm focus:z-10 focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
								placeholder="This page is about..."
								required
								value={ payload.Description }
							/>
						</div>
						<p class="hidden text-xs text-red-600 mt-2" id="target_address-error">Please provide a description.</p>
					</div>
					<div>
						<label for="slug" class="block text-sm font-medium mb-2 dark:text-white">Path</label>
						<div class="relative">
							<input
								type="text"
								name="page_slug"
								class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-800 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
								required
								placeholder="/awesome-page"
								value={ payload.PageSlug }
								aria-describedby="slug-error"
							/>
						</div>
					</div>
				</div>
				<div class="grid grid-cols-1">
					<div>
						<div
							class="pathpy-3 flex items-center text-sm text-gray-800 before:flex-1 before:border-t before:border-gray-200 before:me-6 after:flex-1 after:border-t after:border-gray-200 after:ms-6 dark:text-white dark:before:border-neutral-600 dark:after:border-neutral-600 py-4"
						>
							Content Editor
						</div>
						@partial.GrapesJSEditor(payload.PageSlug, "page_content_json", "page_content_html", payload.ContentJSON)
					</div>
				</div>
				<div
					class="pathpy-3 flex items-center text-sm text-gray-800 before:flex-1 before:border-t before:border-gray-200 before:me-6 after:flex-1 after:border-t after:border-gray-200 after:ms-6 dark:text-white dark:before:border-neutral-600 dark:after:border-neutral-600 py-4"
				>
					SEO Fields
				</div>
				<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
					<div>
						<label
							for="meta_description_title"
							class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
						>Meta Title</label>
						<input
							type="text"
							name="meta_description_title"
							placeholder="This will be visible at tab and SEO Crawlers as Page Title."
							value={ payload.MetaData.Title }
							aria-describedby="meta_description_title"
							class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
						/>
					</div>
					<div>
						<label
							for="meta_description_og_title"
							class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
						>OG Title</label>
						<input
							type="text"
							name="meta_description_og_title"
							placeholder="This will be crawled as OpenGraph Title when placed link the some other platform."
							value={ payload.MetaData.OGTitle }
							aria-describedby="meta_description_og_title"
							class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
						/>
					</div>
				</div>
				<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
					<div>
						<label
							for="meta_description_description"
							class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
						>Meta Description</label>
						<textarea
							name="meta_description_description"
							aria-describedby="meta_description_description"
							class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
							rows="3"
							placeholder="This will be crawled by bots as Page Description Meta Data."
						>{ payload.MetaData.Description }</textarea>
					</div>
					<div>
						<label
							for="meta_description_og_description"
							class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
						>OG Description</label>
						<textarea
							name="meta_description_og_description"
							aria-describedby="meta_description_og_description"
							class="py-3 px-4 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600"
							rows="3"
							placeholder="This will be crawled by bots as OpenGraph Description usefull for link placement."
						>{ payload.MetaData.OGDescription }</textarea>
					</div>
				</div>
				<div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:gap-6">
					<div>
						<label
							for="meta_description_locale"
							class="block mb-2 text-sm text-gray-700 font-medium dark:text-white"
						>Locale</label>
						@partial.FormSelectWithSearch(utils.LocaleOptions(payload.MetaData.Locale), "meta_description_locale", "Select an Locale")
					</div>
				</div>
			</div>
			<div class="mt-5 flex justify-end gap-x-2">
				<button type="submit" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none">
					Save changes
					<div class="htmx-indicator" id="spinner">
						<div class="animate-spin inline-block size-6 border-[3px] border-current border-t-transparent text-blue-600 rounded-full dark:text-blue-500" role="status" aria-label="loading">
							<span class="sr-only">Loading...</span>
						</div>
					</div>
				</button>
			</div>
		</form>
	</div>
}

type EditPageStatusPayload struct {
	Status   enums.StatusState `json:"page_status" form:"page_status"`
	HubSlug  string
	PageSlug string
}

templ PageStatusForm(payload EditPageStatusPayload) {
	// hx target select element changed
	<form hx-post={ fmt.Sprintf("/hub/%s/pages/%s/status", payload.HubSlug, payload.PageSlug) } hx-trigger="change from:#page_status" hx-swap="outerHTML">
		<div>
			@partial.FormSelect(partial.StatusStateOptions(payload.Status), "page_status")
		</div>
	</form>
}
