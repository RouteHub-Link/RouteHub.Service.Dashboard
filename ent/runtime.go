// Code generated by ent, DO NOT EDIT.

package ent

import (
	entdomain "RouteHub.Service.Dashboard/ent/domain"
	enthub "RouteHub.Service.Dashboard/ent/hub"
	"RouteHub.Service.Dashboard/ent/link"
	"RouteHub.Service.Dashboard/ent/organization"
	"RouteHub.Service.Dashboard/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	entdomainFields := schema.Domain{}.Fields()
	_ = entdomainFields
	// entdomainDescName is the schema descriptor for name field.
	entdomainDescName := entdomainFields[1].Descriptor()
	// entdomain.NameValidator is a validator for the "name" field. It is called by the builders before save.
	entdomain.NameValidator = entdomainDescName.Validators[0].(func(string) error)
	// entdomainDescURL is the schema descriptor for url field.
	entdomainDescURL := entdomainFields[2].Descriptor()
	// entdomain.URLValidator is a validator for the "url" field. It is called by the builders before save.
	entdomain.URLValidator = entdomainDescURL.Validators[0].(func(string) error)
	// entdomainDescID is the schema descriptor for id field.
	entdomainDescID := entdomainFields[0].Descriptor()
	// entdomain.DefaultID holds the default value on creation for the id field.
	entdomain.DefaultID = entdomainDescID.Default.(func() schema.DomainID)
	enthubFields := schema.Hub{}.Fields()
	_ = enthubFields
	// enthubDescName is the schema descriptor for name field.
	enthubDescName := enthubFields[1].Descriptor()
	// enthub.NameValidator is a validator for the "name" field. It is called by the builders before save.
	enthub.NameValidator = enthubDescName.Validators[0].(func(string) error)
	// enthubDescSlug is the schema descriptor for slug field.
	enthubDescSlug := enthubFields[2].Descriptor()
	// enthub.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	enthub.SlugValidator = enthubDescSlug.Validators[0].(func(string) error)
	// enthubDescTCPAddress is the schema descriptor for TCPAddress field.
	enthubDescTCPAddress := enthubFields[4].Descriptor()
	// enthub.TCPAddressValidator is a validator for the "TCPAddress" field. It is called by the builders before save.
	enthub.TCPAddressValidator = enthubDescTCPAddress.Validators[0].(func(string) error)
	// enthubDescID is the schema descriptor for id field.
	enthubDescID := enthubFields[0].Descriptor()
	// enthub.DefaultID holds the default value on creation for the id field.
	enthub.DefaultID = enthubDescID.Default.(func() schema.HubID)
	linkFields := schema.Link{}.Fields()
	_ = linkFields
	// linkDescTarget is the schema descriptor for target field.
	linkDescTarget := linkFields[1].Descriptor()
	// link.TargetValidator is a validator for the "target" field. It is called by the builders before save.
	link.TargetValidator = linkDescTarget.Validators[0].(func(string) error)
	// linkDescPath is the schema descriptor for path field.
	linkDescPath := linkFields[2].Descriptor()
	// link.PathValidator is a validator for the "path" field. It is called by the builders before save.
	link.PathValidator = linkDescPath.Validators[0].(func(string) error)
	// linkDescID is the schema descriptor for id field.
	linkDescID := linkFields[0].Descriptor()
	// link.DefaultID holds the default value on creation for the id field.
	link.DefaultID = linkDescID.Default.(func() schema.LinkID)
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[1].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = organizationDescName.Validators[0].(func(string) error)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationFields[0].Descriptor()
	// organization.DefaultID holds the default value on creation for the id field.
	organization.DefaultID = organizationDescID.Default.(func() schema.OrganizationID)
}
